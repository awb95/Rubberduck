//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rubberduck.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.9.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<CodeInspectionSettings xmlns:xsi=\"http:" +
            "//www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchem" +
            "a\">\r\n  <CodeInspections>\r\n    <CodeInspection Name=\"BooleanAssignedInIfElseInspe" +
            "ction\" Severity=\"Warning\" InspectionType=\"MaintainabilityAndReadabilityIssues\" /" +
            ">\r\n    <CodeInspection Name=\"ObsoleteErrorSyntaxInspection\" Severity=\"Suggestion" +
            "\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"StopKeywo" +
            "rdInspection\" Severity=\"Suggestion\" InspectionType=\"CodeQualityIssues\" />\r\n    <" +
            "CodeInspection Name=\"UnhandledOnErrorResumeNextInspection\" Severity=\"Warning\" In" +
            "spectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"EmptyStringLitera" +
            "lInspection\" Severity=\"Warning\" InspectionType=\"LanguageOpportunities\" />\r\n    <" +
            "CodeInspection Name=\"ImplicitByRefModifierInspection\" Severity=\"Hint\" Inspection" +
            "Type=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"FunctionReturnValueNotUse" +
            "dInspection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n    <Code" +
            "Inspection Name=\"IllegalAnnotationInspection\" Severity=\"Error\" InspectionType=\"R" +
            "ubberduckOpportunities\" />\r\n    <CodeInspection Name=\"RedundantByRefModifierInsp" +
            "ection\" Severity=\"DoNotShow\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeIns" +
            "pection Name=\"MissingAttributeInspection\" Severity=\"Warning\" InspectionType=\"Rub" +
            "berduckOpportunities\" />\r\n    <CodeInspection Name=\"MissingMemberAnnotationInspe" +
            "ction\" Severity=\"Suggestion\" InspectionType=\"RubberduckOpportunities\" />\r\n    <C" +
            "odeInspection Name=\"MissingModuleAnnotationInspection\" Severity=\"Suggestion\" Ins" +
            "pectionType=\"RubberduckOpportunities\" />\r\n    <CodeInspection Name=\"AttributeVal" +
            "ueOutOfSyncInspection\" Severity=\"Warning\" InspectionType=\"RubberduckOpportunitie" +
            "s\" />\r\n    <CodeInspection Name=\"MissingAnnotationArgumentInspection\" Severity=\"" +
            "Error\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"ModuleSc" +
            "opeDimKeywordInspection\" Severity=\"Suggestion\" InspectionType=\"LanguageOpportuni" +
            "ties\" />\r\n    <CodeInspection Name=\"MultilineParameterInspection\" Severity=\"Sugg" +
            "estion\" InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n    <CodeInspec" +
            "tion Name=\"MultipleDeclarationsInspection\" Severity=\"Warning\" InspectionType=\"Ma" +
            "intainabilityAndReadabilityIssues\" />\r\n    <CodeInspection Name=\"ObsoleteCallSta" +
            "tementInspection\" Severity=\"Suggestion\" InspectionType=\"LanguageOpportunities\" /" +
            ">\r\n    <CodeInspection Name=\"ObsoleteCommentSyntaxInspection\" Severity=\"Suggesti" +
            "on\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"Obsolet" +
            "eLetStatementInspection\" Severity=\"Suggestion\" InspectionType=\"LanguageOpportuni" +
            "ties\" />\r\n    <CodeInspection Name=\"OptionBaseInspection\" Severity=\"Hint\" Inspec" +
            "tionType=\"MaintainabilityAndReadabilityIssues\" />\r\n    <CodeInspection Name=\"Red" +
            "undantOptionInspection\" Severity=\"Hint\" InspectionType=\"LanguageOpportunities\" /" +
            ">\r\n    <CodeInspection Name=\"OptionExplicitInspection\" Severity=\"Error\" Inspecti" +
            "onType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"ProcedureCanBeWrittenAs" +
            "FunctionInspection\" Severity=\"Suggestion\" InspectionType=\"LanguageOpportunities\"" +
            " />\r\n    <CodeInspection Name=\"ApplicationWorksheetFunctionInspection\" Severity=" +
            "\"Suggestion\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"As" +
            "signedByValParameterInspection\" Severity=\"Warning\" InspectionType=\"CodeQualityIs" +
            "sues\" />\r\n    <CodeInspection Name=\"EmptyModuleInspection\" Severity=\"Hint\" Inspe" +
            "ctionType=\"MaintainabilityAndReadabilityIssues\" />\r\n    <CodeInspection Name=\"Li" +
            "neLabelNotUsedInspection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" " +
            "/>\r\n    <CodeInspection Name=\"IntegerDataTypeInspection\" Severity=\"Hint\" Inspect" +
            "ionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"ShadowedDeclarationIns" +
            "pection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInsp" +
            "ection Name=\"ConstantNotUsedInspection\" Severity=\"Warning\" InspectionType=\"CodeQ" +
            "ualityIssues\" />\r\n    <CodeInspection Name=\"DefaultProjectNameInspection\" Severi" +
            "ty=\"Suggestion\" InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n    <Co" +
            "deInspection Name=\"EmptyCaseBlockInspection\" Severity=\"Warning\" InspectionType=\"" +
            "MaintainabilityAndReadabilityIssues\" />\r\n    <CodeInspection Name=\"EmptyDoWhileB" +
            "lockInspection\" Severity=\"Suggestion\" InspectionType=\"MaintainabilityAndReadabil" +
            "ityIssues\" />\r\n    <CodeInspection Name=\"EmptyElseBlockInspection\" Severity=\"War" +
            "ning\" InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n    <CodeInspecti" +
            "on Name=\"EmptyForEachBlockInspection\" Severity=\"Warning\" InspectionType=\"Maintai" +
            "nabilityAndReadabilityIssues\" />\r\n    <CodeInspection Name=\"EmptyForLoopBlockIns" +
            "pection\" Severity=\"Warning\" InspectionType=\"MaintainabilityAndReadabilityIssues\"" +
            " />\r\n    <CodeInspection Name=\"EmptyIfBlockInspection\" Severity=\"Warning\" Inspec" +
            "tionType=\"MaintainabilityAndReadabilityIssues\" />\r\n    <CodeInspection Name=\"Emp" +
            "tyWhileWendBlockInspection\" Severity=\"Warning\" InspectionType=\"MaintainabilityAn" +
            "dReadabilityIssues\" />\r\n    <CodeInspection Name=\"EncapsulatePublicFieldInspecti" +
            "on\" Severity=\"Suggestion\" InspectionType=\"MaintainabilityAndReadabilityIssues\" /" +
            ">\r\n    <CodeInspection Name=\"HostSpecificExpressionInspection\" Severity=\"Warning" +
            "\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"Hungarian" +
            "NotationInspection\" Severity=\"Suggestion\" InspectionType=\"MaintainabilityAndRead" +
            "abilityIssues\" />\r\n    <CodeInspection Name=\"ImplicitActiveSheetReferenceInspect" +
            "ion\" Severity=\"Warning\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInsp" +
            "ection Name=\"ImplicitActiveWorkbookReferenceInspection\" Severity=\"Warning\" Inspe" +
            "ctionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"ImplicitDefaultM" +
            "emberAssignmentInspection\" Severity=\"Suggestion\" InspectionType=\"LanguageOpportu" +
            "nities\" />\r\n    <CodeInspection Name=\"ImplicitPublicMemberInspection\" Severity=\"" +
            "Hint\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"Impli" +
            "citVariantReturnTypeInspection\" Severity=\"Hint\" InspectionType=\"LanguageOpportun" +
            "ities\" />\r\n    <CodeInspection Name=\"MemberNotOnInterfaceInspection\" Severity=\"W" +
            "arning\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"MoveFie" +
            "ldCloserToUsageInspection\" Severity=\"Hint\" InspectionType=\"MaintainabilityAndRea" +
            "dabilityIssues\" />\r\n    <CodeInspection Name=\"NonReturningFunctionInspection\" Se" +
            "verity=\"Error\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"" +
            "ObjectVariableNotSetInspection\" Severity=\"Error\" InspectionType=\"CodeQualityIssu" +
            "es\" />\r\n    <CodeInspection Name=\"ObsoleteGlobalInspection\" Severity=\"Suggestion" +
            "\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"ObsoleteT" +
            "ypeHintInspection\" Severity=\"Suggestion\" InspectionType=\"LanguageOpportunities\" " +
            "/>\r\n    <CodeInspection Name=\"ParameterCanBeByValInspection\" Severity=\"Suggestio" +
            "n\" InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n    <CodeInspection " +
            "Name=\"ParameterNotUsedInspection\" Severity=\"Warning\" InspectionType=\"CodeQuality" +
            "Issues\" />\r\n    <CodeInspection Name=\"ProcedureNotUsedInspection\" Severity=\"Warn" +
            "ing\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"SelfAssign" +
            "edDeclarationInspection\" Severity=\"Suggestion\" InspectionType=\"CodeQualityIssues" +
            "\" />\r\n    <CodeInspection Name=\"UnassignedVariableUsageInspection\" Severity=\"Err" +
            "or\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"UndeclaredV" +
            "ariableInspection\" Severity=\"Error\" InspectionType=\"CodeQualityIssues\" />\r\n    <" +
            "CodeInspection Name=\"UntypedFunctionUsageInspection\" Severity=\"Hint\" InspectionT" +
            "ype=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"UseMeaningfulNameInspe" +
            "ction\" Severity=\"Suggestion\" InspectionType=\"MaintainabilityAndReadabilityIssues" +
            "\" />\r\n    <CodeInspection Name=\"VariableNotAssignedInspection\" Severity=\"Warning" +
            "\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"VariableNotUs" +
            "edInspection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n    <Cod" +
            "eInspection Name=\"VariableTypeNotDeclaredInspection\" Severity=\"Warning\" Inspecti" +
            "onType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"WriteOnlyPropertyIn" +
            "spection\" Severity=\"Suggestion\" InspectionType=\"CodeQualityIssues\" />\r\n    <Code" +
            "Inspection Name=\"DefTypeStatementInspection\" Severity=\"Suggestion\" InspectionTyp" +
            "e=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"StepIsNotSpecifiedInspec" +
            "tion\" Severity=\"DoNotShow\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeI" +
            "nspection Name=\"StepOneIsRedundantInspection\" Severity=\"Hint\" InspectionType=\"La" +
            "nguageOpportunities\" />\r\n    <CodeInspection Name=\"SheetAccessedUsingStringInspe" +
            "ction\" Severity=\"Suggestion\" InspectionType=\"LanguageOpportunities\" />\r\n    <Cod" +
            "eInspection Name=\"ObsoleteMemberUsageInspection\" Severity=\"Warning\" InspectionTy" +
            "pe=\"MaintainabilityAndReadabilityIssues\" />\r\n    <CodeInspection Name=\"ObsoleteC" +
            "allingConventionInspection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues" +
            "\" />\r\n    <CodeInspection Name=\"DuplicatedAnnotationInspection\" Severity=\"Error\"" +
            " InspectionType=\"RubberduckOpportunities\" />\r\n    <CodeInspection Name=\"ModuleWi" +
            "thoutFolderInspection\" Severity=\"Suggestion\" InspectionType=\"RubberduckOpportuni" +
            "ties\" />\r\n    <CodeInspection Name=\"OnLocalErrorInspection\" Severity=\"Suggestion" +
            "\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"IsMissing" +
            "OnInappropriateArgumentInspection\" Severity=\"Warning\" InspectionType=\"CodeQualit" +
            "yIssues\" />\r\n    <CodeInspection Name=\"IsMissingWithNonArgumentParameterInspecti" +
            "on\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspectio" +
            "n Name=\"AssignmentNotUsedInspection\" Severity=\"Suggestion\" InspectionType=\"CodeQ" +
            "ualityIssues\" />\r\n    <CodeInspection Name=\"UnderscoreInPublicClassModuleMemberI" +
            "nspection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeIn" +
            "spection Name=\"ExcelUdfNameIsValidCellReferenceInspection\" Severity=\"Warning\" In" +
            "spectionType=\"CodeQualityIssues\" />\r\n  </CodeInspections>\r\n  <WhitelistedIdentif" +
            "iers />\r\n  <RunInspectionsOnSuccessfulParse>true</RunInspectionsOnSuccessfulPars" +
            "e>\r\n</CodeInspectionSettings>")]
        public global::Rubberduck.Settings.CodeInspectionSettings CodeInspectionSettings {
            get {
                return ((global::Rubberduck.Settings.CodeInspectionSettings)(this["CodeInspectionSettings"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>R</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>true</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>CodePaneRefactorRenameCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_CodePaneRefactorRenameCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_CodePaneRefactorRenameCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>F</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>true</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>RefactorEncapsulateFieldCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_RefactorEncapsulateFieldCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_RefactorEncapsulateFieldCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>M</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>true</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>RefactorExtractMethodCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_RefactorExtractMethodCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_RefactorExtractMethodCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>C</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>true</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>RefactorMoveCloserToUsageCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_RefactorMoveCloserToUsageCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_RefactorMoveCloserToUsageCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>R</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>false</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>CodeExplorerCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_CodeExplorerCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_CodeExplorerCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>E</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>true</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>ExportAllCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_ExportAllCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_ExportAllCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>T</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>false</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>FindSymbolCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_FindSymbolCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_FindSymbolCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>M</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>false</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>IndentCurrentModuleCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_IndentCurrentModuleCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_IndentCurrentModuleCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>P</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>false</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>IndentCurrentProcedureCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_IndentCurrentProcedureCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_IndentCurrentProcedureCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>I</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>true</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>InspectionResultsCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_InspectionResultsCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_InspectionResultsCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>`</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>false</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>ReparseCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_ReparseCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_ReparseCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>T</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>true</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>TestExplorerCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_TestExplorerCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_TestExplorerCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<ToDoMarker xmlns:xsi=\"http://www.w3.org" +
            "/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" Text=\"TOD" +
            "O\" />")]
        public global::Rubberduck.Settings.ToDoMarker ToDoMarker_ToDo {
            get {
                return ((global::Rubberduck.Settings.ToDoMarker)(this["ToDoMarker_ToDo"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<ToDoMarker xmlns:xsi=\"http://www.w3.org" +
            "/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" Text=\"NOT" +
            "E\" />")]
        public global::Rubberduck.Settings.ToDoMarker ToDoMarker_Note {
            get {
                return ((global::Rubberduck.Settings.ToDoMarker)(this["ToDoMarker_Note"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<ToDoMarker xmlns:xsi=\"http://www.w3.org" +
            "/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" Text=\"BUG" +
            "\" />")]
        public global::Rubberduck.Settings.ToDoMarker ToDoMarker_Bug {
            get {
                return ((global::Rubberduck.Settings.ToDoMarker)(this["ToDoMarker_Bug"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<WindowSettings xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <CodeExplorerVisibleOnStartup>false</CodeExplorerVisibleOnStartup>
  <CodeInspectionsVisibleOnStartup>false</CodeInspectionsVisibleOnStartup>
  <TestExplorerVisibleOnStartup>false</TestExplorerVisibleOnStartup>
  <TodoExplorerVisibleOnStartup>false</TodoExplorerVisibleOnStartup>
  <CodeExplorer_SortByName>true</CodeExplorer_SortByName>
  <CodeExplorer_SortByCodeOrder>false</CodeExplorer_SortByCodeOrder>
  <CodeExplorer_GroupByType>false</CodeExplorer_GroupByType>
</WindowSettings>")]
        public global::Rubberduck.Settings.WindowSettings WindowSettings {
            get {
                return ((global::Rubberduck.Settings.WindowSettings)(this["WindowSettings"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<UnitTestSettings xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <BindingMode>LateBinding</BindingMode>
  <AssertMode>StrictAssert</AssertMode>
  <ModuleInit>true</ModuleInit>
  <MethodInit>true</MethodInit>
  <DefaultTestStubInNewModule>false</DefaultTestStubInNewModule>
</UnitTestSettings>")]
        public global::Rubberduck.UnitTesting.Settings.UnitTestSettings UnitTestSettings {
            get {
                return ((global::Rubberduck.UnitTesting.Settings.UnitTestSettings)(this["UnitTestSettings"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<GeneralSettings xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Language Code=""en-US"" />
  <CanShowSplash>true</CanShowSplash>
  <CanCheckVersion>true</CanCheckVersion>
  <CompileBeforeParse>true</CompileBeforeParse>
  <IsSmartIndenterPrompted>false</IsSmartIndenterPrompted>
  <IsAutoSaveEnabled>false</IsAutoSaveEnabled>
  <AutoSavePeriod>10</AutoSavePeriod>
  <UserEditedLogLevel>false</UserEditedLogLevel>
  <MinimumLogLevel>0</MinimumLogLevel>
  <SetDpiUnaware>false</SetDpiUnaware>
  <EnableExperimentalFeatures />
</GeneralSettings>")]
        public global::Rubberduck.Settings.GeneralSettings GeneralSettings {
            get {
                return ((global::Rubberduck.Settings.GeneralSettings)(this["GeneralSettings"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<AutoCompleteSettings xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" IsEnabled=""false"">
  <SmartConcat IsEnabled=""false"">
    <ConcatVbNewLineModifier>None</ConcatVbNewLineModifier>
    <ConcatMaxLines>25</ConcatMaxLines>
  </SmartConcat>
  <SelfClosingPairs IsEnabled=""false"" />
  <BlockCompletion IsEnabled=""false"" CompleteOnEnter=""false"" CompleteOnTab=""false"" />
</AutoCompleteSettings>")]
        public global::Rubberduck.Settings.AutoCompleteSettings AutoCompleteSettings {
            get {
                return ((global::Rubberduck.Settings.AutoCompleteSettings)(this["AutoCompleteSettings"]));
            }
        }
    }
}
