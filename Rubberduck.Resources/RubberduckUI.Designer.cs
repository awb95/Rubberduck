//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rubberduck.Resources {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class RubberduckUI {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal RubberduckUI() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Rubberduck.Resources.RubberduckUI", typeof(RubberduckUI).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add ähnelt.
        /// </summary>
        public static string Add {
            get {
                return ResourceManager.GetString("Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap AddClass {
            get {
                object obj = ResourceManager.GetObject("AddClass", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap AddForm {
            get {
                object obj = ResourceManager.GetObject("AddForm", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap AddModule {
            get {
                object obj = ResourceManager.GetObject("AddModule", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Implementations of &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string AllImplementations_Caption {
            get {
                return ResourceManager.GetString("AllImplementations_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Class or member &apos;{0}&apos; is not implemented. ähnelt.
        /// </summary>
        public static string AllImplementations_NoneFound {
            get {
                return ResourceManager.GetString("AllImplementations_NoneFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All references: &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string AllReferences_Caption {
            get {
                return ResourceManager.GetString("AllReferences_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No references were found for identifier &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string AllReferences_NoneFound {
            get {
                return ResourceManager.GetString("AllReferences_NoneFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No uses were found for project reference &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string AllReferences_NoneFoundReference {
            get {
                return ResourceManager.GetString("AllReferences_NoneFoundReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search for uses of reference &apos;{0}&apos; has returned {1} results. Displaying them may negatively impact performance. Continue? ähnelt.
        /// </summary>
        public static string AllReferences_PerformanceWarning {
            get {
                return ResourceManager.GetString("AllReferences_PerformanceWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Apply ähnelt.
        /// </summary>
        public static string ApplyButtonText {
            get {
                return ResourceManager.GetString("ApplyButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap arrow_090 {
            get {
                object obj = ResourceManager.GetObject("arrow_090", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap arrow_090_dimmed {
            get {
                object obj = ResourceManager.GetObject("arrow_090_dimmed", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap arrow_270 {
            get {
                object obj = ResourceManager.GetObject("arrow_270", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap arrow_270_dimmed {
            get {
                object obj = ResourceManager.GetObject("arrow_270_dimmed", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap arrow_circle_double {
            get {
                object obj = ResourceManager.GetObject("arrow_circle_double", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap BrokenReference {
            get {
                object obj = ResourceManager.GetObject("BrokenReference", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancel ähnelt.
        /// </summary>
        public static string CancelButtonText {
            get {
                return ResourceManager.GetString("CancelButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change ähnelt.
        /// </summary>
        public static string Change {
            get {
                return ResourceManager.GetString("Change", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap clock {
            get {
                object obj = ResourceManager.GetObject("clock", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap clock_select {
            get {
                object obj = ResourceManager.GetObject("clock_select", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap clock_select_pinned {
            get {
                object obj = ResourceManager.GetObject("clock_select_pinned", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Close ähnelt.
        /// </summary>
        public static string CloseButtonText {
            get {
                return ResourceManager.GetString("CloseButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} {1} {2} {3} {4} {5} ähnelt.
        /// </summary>
        public static string CodeExplorer_IExportable_DeclarationFormat {
            get {
                return ResourceManager.GetString("CodeExplorer_IExportable_DeclarationFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Navigate to selected issue ähnelt.
        /// </summary>
        public static string CodeInspections_GoToolTip {
            get {
                return ResourceManager.GetString("CodeInspections_GoToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Navigate to next issue ähnelt.
        /// </summary>
        public static string CodeInspections_NextToolTip {
            get {
                return ResourceManager.GetString("CodeInspections_NextToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Navigate to previous issue ähnelt.
        /// </summary>
        public static string CodeInspections_PreviousToolTip {
            get {
                return ResourceManager.GetString("CodeInspections_PreviousToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Address the issue ähnelt.
        /// </summary>
        public static string CodeInspections_QuickFixToolTip {
            get {
                return ResourceManager.GetString("CodeInspections_QuickFixToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Run code inspections ähnelt.
        /// </summary>
        public static string CodeInspections_RefreshToolTip {
            get {
                return ResourceManager.GetString("CodeInspections_RefreshToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Run code inspections ähnelt.
        /// </summary>
        public static string CodeInspections_Run {
            get {
                return ResourceManager.GetString("CodeInspections_Run", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code _Inspections ähnelt.
        /// </summary>
        public static string CodeInspectionsWindowSettings_AccessKey {
            get {
                return ResourceManager.GetString("CodeInspectionsWindowSettings_AccessKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code Explorer ähnelt.
        /// </summary>
        public static string CommandDescription_CodeExplorerCommand {
            get {
                return ResourceManager.GetString("CommandDescription_CodeExplorerCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Refactor / Rename ähnelt.
        /// </summary>
        public static string CommandDescription_CodePaneRefactorRenameCommand {
            get {
                return ResourceManager.GetString("CommandDescription_CodePaneRefactorRenameCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export active project ähnelt.
        /// </summary>
        public static string CommandDescription_ExportAllCommand {
            get {
                return ResourceManager.GetString("CommandDescription_ExportAllCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Find symbol ähnelt.
        /// </summary>
        public static string CommandDescription_FindSymbolCommand {
            get {
                return ResourceManager.GetString("CommandDescription_FindSymbolCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indent Module ähnelt.
        /// </summary>
        public static string CommandDescription_IndentCurrentModuleCommand {
            get {
                return ResourceManager.GetString("CommandDescription_IndentCurrentModuleCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indent Procedure ähnelt.
        /// </summary>
        public static string CommandDescription_IndentCurrentProcedureCommand {
            get {
                return ResourceManager.GetString("CommandDescription_IndentCurrentProcedureCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code Inspections ähnelt.
        /// </summary>
        public static string CommandDescription_InspectionResultsCommand {
            get {
                return ResourceManager.GetString("CommandDescription_InspectionResultsCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Peek definition ähnelt.
        /// </summary>
        public static string CommandDescription_PeekDefinitionCommand {
            get {
                return ResourceManager.GetString("CommandDescription_PeekDefinitionCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Refactor / Encapsulate Field ähnelt.
        /// </summary>
        public static string CommandDescription_RefactorEncapsulateFieldCommand {
            get {
                return ResourceManager.GetString("CommandDescription_RefactorEncapsulateFieldCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Refactor / Extract Method ähnelt.
        /// </summary>
        public static string CommandDescription_RefactorExtractMethodCommand {
            get {
                return ResourceManager.GetString("CommandDescription_RefactorExtractMethodCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Refactor / Move declaration closer to usage ähnelt.
        /// </summary>
        public static string CommandDescription_RefactorMoveCloserToUsageCommand {
            get {
                return ResourceManager.GetString("CommandDescription_RefactorMoveCloserToUsageCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Refresh parser state ähnelt.
        /// </summary>
        public static string CommandDescription_ReparseCommand {
            get {
                return ResourceManager.GetString("CommandDescription_ReparseCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Test Explorer ähnelt.
        /// </summary>
        public static string CommandDescription_TestExplorerCommand {
            get {
                return ResourceManager.GetString("CommandDescription_TestExplorerCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hook is already attached. ähnelt.
        /// </summary>
        public static string CommonHotkey_HookAttached {
            get {
                return ResourceManager.GetString("CommonHotkey_HookAttached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hook is already detached. ähnelt.
        /// </summary>
        public static string CommonHotkey_HookDetached {
            get {
                return ResourceManager.GetString("CommonHotkey_HookDetached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid key. ähnelt.
        /// </summary>
        public static string CommonHotkey_InvalidKey {
            get {
                return ResourceManager.GetString("CommonHotkey_InvalidKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hotkey ({0}) not registered. ähnelt.
        /// </summary>
        public static string CommonHotkey_KeyNotRegistered {
            get {
                return ResourceManager.GetString("CommonHotkey_KeyNotRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Component ähnelt.
        /// </summary>
        public static string Component {
            get {
                return ResourceManager.GetString("Component", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ActiveX Designer ähnelt.
        /// </summary>
        public static string ComponentType_ActiveXDesigner {
            get {
                return ResourceManager.GetString("ComponentType_ActiveXDesigner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Class Module ähnelt.
        /// </summary>
        public static string ComponentType_ClassModule {
            get {
                return ResourceManager.GetString("ComponentType_ClassModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die COM component ähnelt.
        /// </summary>
        public static string ComponentType_ComComponent {
            get {
                return ResourceManager.GetString("ComponentType_ComComponent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Document Object ähnelt.
        /// </summary>
        public static string ComponentType_DocObject {
            get {
                return ResourceManager.GetString("ComponentType_DocObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Document Module ähnelt.
        /// </summary>
        public static string ComponentType_Document {
            get {
                return ResourceManager.GetString("ComponentType_Document", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MDI Form ähnelt.
        /// </summary>
        public static string ComponentType_MDIForm {
            get {
                return ResourceManager.GetString("ComponentType_MDIForm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Property Page ähnelt.
        /// </summary>
        public static string ComponentType_PropPage {
            get {
                return ResourceManager.GetString("ComponentType_PropPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Related Document ähnelt.
        /// </summary>
        public static string ComponentType_RelatedDocument {
            get {
                return ResourceManager.GetString("ComponentType_RelatedDocument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resource File ähnelt.
        /// </summary>
        public static string ComponentType_ResFile {
            get {
                return ResourceManager.GetString("ComponentType_ResFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Standard Module ähnelt.
        /// </summary>
        public static string ComponentType_StandardModule {
            get {
                return ResourceManager.GetString("ComponentType_StandardModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Undefined ähnelt.
        /// </summary>
        public static string ComponentType_Undefined {
            get {
                return ResourceManager.GetString("ComponentType_Undefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die User Control ähnelt.
        /// </summary>
        public static string ComponentType_UserControl {
            get {
                return ResourceManager.GetString("ComponentType_UserControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die UserForm ähnelt.
        /// </summary>
        public static string ComponentType_UserForm {
            get {
                return ResourceManager.GetString("ComponentType_UserForm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VB Form ähnelt.
        /// </summary>
        public static string ComponentType_VBForm {
            get {
                return ResourceManager.GetString("ComponentType_VBForm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable &apos;{0}&apos; is assigned. Remove assignment instruction(s)? ähnelt.
        /// </summary>
        public static string ConfirmRemoveAssignmentWithUnusedDeclaration {
            get {
                return ResourceManager.GetString("ConfirmRemoveAssignmentWithUnusedDeclaration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die multiple controls ähnelt.
        /// </summary>
        public static string ContextMultipleControlsSelection {
            get {
                return ResourceManager.GetString("ContextMultipleControlsSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die references ähnelt.
        /// </summary>
        public static string ContextReferences {
            get {
                return ResourceManager.GetString("ContextReferences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap cross_circle {
            get {
                object obj = ResourceManager.GetObject("cross_circle", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap cross_script {
            get {
                object obj = ResourceManager.GetObject("cross_script", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die document ähnelt.
        /// </summary>
        public static string DeclarationType_Document {
            get {
                return ResourceManager.GetString("DeclarationType_Document", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deselect All ähnelt.
        /// </summary>
        public static string DeselectAll_Button {
            get {
                return ResourceManager.GetString("DeselectAll_Button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap edit_size {
            get {
                object obj = ResourceManager.GetObject("edit_size", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die to parse and process the projects in the VBE. ähnelt.
        /// </summary>
        public static string EmptyUIRefreshMessage {
            get {
                return ResourceManager.GetString("EmptyUIRefreshMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck doesn&apos;t see anything yet. ähnelt.
        /// </summary>
        public static string EmptyUIRefreshMessage_Title {
            get {
                return ResourceManager.GetString("EmptyUIRefreshMessage_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Absolute ähnelt.
        /// </summary>
        public static string EndOfLineCommentStyle_Absolute {
            get {
                return ResourceManager.GetString("EndOfLineCommentStyle_Absolute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Align In Column ähnelt.
        /// </summary>
        public static string EndOfLineCommentStyle_AlignInColumn {
            get {
                return ResourceManager.GetString("EndOfLineCommentStyle_AlignInColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Same Gap ähnelt.
        /// </summary>
        public static string EndOfLineCommentStyle_SameGap {
            get {
                return ResourceManager.GetString("EndOfLineCommentStyle_SameGap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Standard Gap ähnelt.
        /// </summary>
        public static string EndOfLineCommentStyle_StandardGap {
            get {
                return ResourceManager.GetString("EndOfLineCommentStyle_StandardGap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap exclamation {
            get {
                object obj = ResourceManager.GetObject("exclamation", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap exclamation_pinned {
            get {
                object obj = ResourceManager.GetObject("exclamation_pinned", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a folder to export the source of {0} to: ähnelt.
        /// </summary>
        public static string ExportAllCommand_SaveAsDialog_Title {
            get {
                return ResourceManager.GetString("ExportAllCommand_SaveAsDialog_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Find ähnelt.
        /// </summary>
        public static string Find {
            get {
                return ResourceManager.GetString("Find", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Find symbol ähnelt.
        /// </summary>
        public static string FindSymbolDialog_Caption {
            get {
                return ResourceManager.GetString("FindSymbolDialog_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fix ähnelt.
        /// </summary>
        public static string Fix {
            get {
                return ResourceManager.GetString("Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Go ähnelt.
        /// </summary>
        public static string Go {
            get {
                return ResourceManager.GetString("Go", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Grouping ähnelt.
        /// </summary>
        public static string GroupingGrid_GroupingStyle {
            get {
                return ResourceManager.GetString("GroupingGrid_GroupingStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die By category ähnelt.
        /// </summary>
        public static string GroupingStyle_ByCategory {
            get {
                return ResourceManager.GetString("GroupingStyle_ByCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die By inspection type ähnelt.
        /// </summary>
        public static string GroupingStyle_ByInspectionType {
            get {
                return ResourceManager.GetString("GroupingStyle_ByInspectionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die By location ähnelt.
        /// </summary>
        public static string GroupingStyle_ByLocation {
            get {
                return ResourceManager.GetString("GroupingStyle_ByLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die By marker ähnelt.
        /// </summary>
        public static string GroupingStyle_ByMarker {
            get {
                return ResourceManager.GetString("GroupingStyle_ByMarker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die By inspection ähnelt.
        /// </summary>
        public static string GroupingStyle_ByName {
            get {
                return ResourceManager.GetString("GroupingStyle_ByName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die By outcome ähnelt.
        /// </summary>
        public static string GroupingStyle_ByOutcome {
            get {
                return ResourceManager.GetString("GroupingStyle_ByOutcome", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die By severity ähnelt.
        /// </summary>
        public static string GroupingStyle_BySeverity {
            get {
                return ResourceManager.GetString("GroupingStyle_BySeverity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Home ähnelt.
        /// </summary>
        public static string Home {
            get {
                return ResourceManager.GetString("Home", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap hourglass {
            get {
                object obj = ResourceManager.GetObject("hourglass", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current Project ähnelt.
        /// </summary>
        public static string IndentCurrentProject {
            get {
                return ResourceManager.GetString("IndentCurrentProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck needs a refresh to respect @NoIndent-Annotations. Continue Indent and ignore @NoIndent-Annotations? ähnelt.
        /// </summary>
        public static string Indenter_ContinueIndentWithoutAnnotations {
            get {
                return ResourceManager.GetString("Indenter_ContinueIndentWithoutAnnotations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Continue Indent without @NoIndent? ähnelt.
        /// </summary>
        public static string Indenter_ContinueIndentWithoutAnnotations_DialogCaption {
            get {
                return ResourceManager.GetString("Indenter_ContinueIndentWithoutAnnotations_DialogCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Inspect ähnelt.
        /// </summary>
        public static string Inspect {
            get {
                return ResourceManager.GetString("Inspect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Collapse all ähnelt.
        /// </summary>
        public static string InspectionResults_CollapseAll {
            get {
                return ResourceManager.GetString("InspectionResults_CollapseAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expand all ähnelt.
        /// </summary>
        public static string InspectionResults_ExpandAll {
            get {
                return ResourceManager.GetString("InspectionResults_ExpandAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Issue ähnelt.
        /// </summary>
        public static string Issue {
            get {
                return ResourceManager.GetString("Issue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Czech ähnelt.
        /// </summary>
        public static string Language_CS {
            get {
                return ResourceManager.GetString("Language_CS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die German ähnelt.
        /// </summary>
        public static string Language_DE {
            get {
                return ResourceManager.GetString("Language_DE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die English ähnelt.
        /// </summary>
        public static string Language_EN {
            get {
                return ResourceManager.GetString("Language_EN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Español ähnelt.
        /// </summary>
        public static string Language_ES {
            get {
                return ResourceManager.GetString("Language_ES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die French ähnelt.
        /// </summary>
        public static string Language_FR {
            get {
                return ResourceManager.GetString("Language_FR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Italian ähnelt.
        /// </summary>
        public static string Language_IT {
            get {
                return ResourceManager.GetString("Language_IT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap light_bulb_code {
            get {
                object obj = ResourceManager.GetObject("light_bulb_code", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Line ähnelt.
        /// </summary>
        public static string Line {
            get {
                return ResourceManager.GetString("Line", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Loading Rubberduck Configuration ähnelt.
        /// </summary>
        public static string LoadConfigError {
            get {
                return ResourceManager.GetString("LoadConfigError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap lock_pinned {
            get {
                object obj = ResourceManager.GetObject("lock_pinned", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap LockedReference {
            get {
                object obj = ResourceManager.GetObject("LockedReference", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap magnifier_medium {
            get {
                object obj = ResourceManager.GetObject("magnifier_medium", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Make ActiveSheet reference explicit ähnelt.
        /// </summary>
        public static string MakeActiveSheetReferenceExplicit {
            get {
                return ResourceManager.GetString("MakeActiveSheetReferenceExplicit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Make ActiveWorkbook reference explicit ähnelt.
        /// </summary>
        public static string MakeActiveWorkbookReferenceExplicit {
            get {
                return ResourceManager.GetString("MakeActiveWorkbookReferenceExplicit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The identifier &apos;{0}&apos; will trigger a &apos;Use Meaningful Name&apos; inspection result. ähnelt.
        /// </summary>
        public static string MeaninglessNameCriteriaMatchFormat {
            get {
                return ResourceManager.GetString("MeaninglessNameCriteriaMatchFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Member Attribute Recovery Failure ähnelt.
        /// </summary>
        public static string MemberAttributeRecoveryFailureCaption {
            get {
                return ResourceManager.GetString("MemberAttributeRecoveryFailureCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Member attributes for the following modules could not be recovered because they could no longer be found. {0} ähnelt.
        /// </summary>
        public static string MemberAttributeRecoveryMembersNotFoundMessage {
            get {
                return ResourceManager.GetString("MemberAttributeRecoveryMembersNotFoundMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed to recover member attributes. ähnelt.
        /// </summary>
        public static string MemberAttributeRecoveryRewriteFailedMessage {
            get {
                return ResourceManager.GetString("MemberAttributeRecoveryRewriteFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap minus_white {
            get {
                object obj = ResourceManager.GetObject("minus_white", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Module Name ähnelt.
        /// </summary>
        public static string ModuleName {
            get {
                return ResourceManager.GetString("ModuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Module options should be specified first ähnelt.
        /// </summary>
        public static string ModuleOptionsNotSpecifiedFirst {
            get {
                return ResourceManager.GetString("ModuleOptionsNotSpecifiedFirst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name ähnelt.
        /// </summary>
        public static string Name {
            get {
                return ResourceManager.GetString("Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name: ähnelt.
        /// </summary>
        public static string NameLabelText {
            get {
                return ResourceManager.GetString("NameLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Navigate ähnelt.
        /// </summary>
        public static string Navigate {
            get {
                return ResourceManager.GetString("Navigate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Navigation ähnelt.
        /// </summary>
        public static string Navigation {
            get {
                return ResourceManager.GetString("Navigation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New ähnelt.
        /// </summary>
        public static string New {
            get {
                return ResourceManager.GetString("New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Next ähnelt.
        /// </summary>
        public static string Next {
            get {
                return ResourceManager.GetString("Next", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Offline ähnelt.
        /// </summary>
        public static string Offline {
            get {
                return ResourceManager.GetString("Offline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OK ähnelt.
        /// </summary>
        public static string OK {
            get {
                return ResourceManager.GetString("OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OK ähnelt.
        /// </summary>
        public static string OK_AllCaps {
            get {
                return ResourceManager.GetString("OK_AllCaps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Online ähnelt.
        /// </summary>
        public static string Online {
            get {
                return ResourceManager.GetString("Online", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap padlock {
            get {
                object obj = ResourceManager.GetObject("padlock", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameter ähnelt.
        /// </summary>
        public static string Parameter {
            get {
                return ResourceManager.GetString("Parameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck - Parser Errors ähnelt.
        /// </summary>
        public static string ParseErrors_Caption {
            get {
                return ResourceManager.GetString("ParseErrors_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parsing &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string ParseProgress {
            get {
                return ResourceManager.GetString("ParseProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parser Errors ähnelt.
        /// </summary>
        public static string Parser_ParserError {
            get {
                return ResourceManager.GetString("Parser_ParserError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} module(s) failed to parse; click for details. ähnelt.
        /// </summary>
        public static string ParserErrorToolTipText {
            get {
                return ResourceManager.GetString("ParserErrorToolTipText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Details ähnelt.
        /// </summary>
        public static string ParserProgress_ShowDetails {
            get {
                return ResourceManager.GetString("ParserProgress_ShowDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Busy ähnelt.
        /// </summary>
        public static string ParserState_Busy {
            get {
                return ResourceManager.GetString("ParserState_Busy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parse Error ähnelt.
        /// </summary>
        public static string ParserState_Error {
            get {
                return ResourceManager.GetString("ParserState_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading references ähnelt.
        /// </summary>
        public static string ParserState_LoadingReference {
            get {
                return ResourceManager.GetString("ParserState_LoadingReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parsed ähnelt.
        /// </summary>
        public static string ParserState_Parsed {
            get {
                return ResourceManager.GetString("ParserState_Parsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parsing… ähnelt.
        /// </summary>
        public static string ParserState_Parsing {
            get {
                return ResourceManager.GetString("ParserState_Parsing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pending ähnelt.
        /// </summary>
        public static string ParserState_Pending {
            get {
                return ResourceManager.GetString("ParserState_Pending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ready ähnelt.
        /// </summary>
        public static string ParserState_Ready {
            get {
                return ResourceManager.GetString("ParserState_Ready", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolver Error ähnelt.
        /// </summary>
        public static string ParserState_ResolverError {
            get {
                return ResourceManager.GetString("ParserState_ResolverError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolving declarations... ähnelt.
        /// </summary>
        public static string ParserState_ResolvingDeclarations {
            get {
                return ResourceManager.GetString("ParserState_ResolvingDeclarations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolving references... ähnelt.
        /// </summary>
        public static string ParserState_ResolvingReferences {
            get {
                return ResourceManager.GetString("ParserState_ResolvingReferences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Started ähnelt.
        /// </summary>
        public static string ParserState_Started {
            get {
                return ResourceManager.GetString("ParserState_Started", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unexpected Error ähnelt.
        /// </summary>
        public static string ParserState_UnexpectedError {
            get {
                return ResourceManager.GetString("ParserState_UnexpectedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parsing project components... ähnelt.
        /// </summary>
        public static string ParseStarted {
            get {
                return ResourceManager.GetString("ParseStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (parsing...) ähnelt.
        /// </summary>
        public static string Parsing {
            get {
                return ResourceManager.GetString("Parsing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Passed ähnelt.
        /// </summary>
        public static string Passed {
            get {
                return ResourceManager.GetString("Passed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (no description annotation or attribute) ähnelt.
        /// </summary>
        public static string PeekDefinition_DefaultDescription {
            get {
                return ResourceManager.GetString("PeekDefinition_DefaultDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Peek definition ähnelt.
        /// </summary>
        public static string PeekDefinitionCommandText {
            get {
                return ResourceManager.GetString("PeekDefinitionCommandText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Performance Warning ähnelt.
        /// </summary>
        public static string PerformanceWarningCaption {
            get {
                return ResourceManager.GetString("PerformanceWarningCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap pinned {
            get {
                object obj = ResourceManager.GetObject("pinned", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap plus_circle {
            get {
                object obj = ResourceManager.GetObject("plus_circle", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap plus_circle_pinned {
            get {
                object obj = ResourceManager.GetObject("plus_circle_pinned", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preview ähnelt.
        /// </summary>
        public static string Preview {
            get {
                return ResourceManager.GetString("Preview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Previous ähnelt.
        /// </summary>
        public static string Previous {
            get {
                return ResourceManager.GetString("Previous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Project ähnelt.
        /// </summary>
        public static string Project {
            get {
                return ResourceManager.GetString("Project", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap ProjectForm {
            get {
                object obj = ResourceManager.GetObject("ProjectForm", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Project Name ähnelt.
        /// </summary>
        public static string ProjectName {
            get {
                return ResourceManager.GetString("ProjectName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selection is not a variable. ähnelt.
        /// </summary>
        public static string PromoteVariable_InvalidSelection {
            get {
                return ResourceManager.GetString("PromoteVariable_InvalidSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}
        ///{1}
        ///
        ///{2}
        ///
        ///Would you like to restore default configuration?
        ///Warning: All customized settings will be lost.  Your old file will be saved in &apos;{3}&apos;. ähnelt.
        /// </summary>
        public static string PromptLoadDefaultConfig {
            get {
                return ResourceManager.GetString("PromptLoadDefaultConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap question_white {
            get {
                object obj = ResourceManager.GetObject("question_white", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attempt to fix broken references ähnelt.
        /// </summary>
        public static string ReferenceSettings_FixBroken {
            get {
                return ResourceManager.GetString("ReferenceSettings_FixBroken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Browse for project folder ähnelt.
        /// </summary>
        public static string ReferenceSettings_FolderDialogHeader {
            get {
                return ResourceManager.GetString("ReferenceSettings_FolderDialogHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Project Directories ähnelt.
        /// </summary>
        public static string ReferenceSettings_FoldersHeader {
            get {
                return ResourceManager.GetString("ReferenceSettings_FoldersHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Recent references tracked: ähnelt.
        /// </summary>
        public static string ReferenceSettings_RecentTracked {
            get {
                return ResourceManager.GetString("ReferenceSettings_RecentTracked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Track references not added by Rubberduck ähnelt.
        /// </summary>
        public static string ReferenceSettings_TrackHostReferences {
            get {
                return ResourceManager.GetString("ReferenceSettings_TrackHostReferences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Refresh ähnelt.
        /// </summary>
        public static string Refresh {
            get {
                return ResourceManager.GetString("Refresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove ähnelt.
        /// </summary>
        public static string Remove {
            get {
                return ResourceManager.GetString("Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rename ähnelt.
        /// </summary>
        public static string Rename {
            get {
                return ResourceManager.GetString("Rename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ParamArray parameter must be specified last. ähnelt.
        /// </summary>
        public static string ReorderPresenter_ParamArrayError {
            get {
                return ResourceManager.GetString("ReorderPresenter_ParamArrayError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}. Click to refresh. ähnelt.
        /// </summary>
        public static string ReparseToolTipText {
            get {
                return ResourceManager.GetString("ReparseToolTipText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you really want to delete the contents of project &apos;{0}&apos; and replace them with the contents of the selected files? ähnelt.
        /// </summary>
        public static string ReplaceProjectContentsFromFilesCommand_ConfirmationMessage {
            get {
                return ResourceManager.GetString("ReplaceProjectContentsFromFilesCommand_ConfirmationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace Project Content from Files ähnelt.
        /// </summary>
        public static string ReplaceProjectContentsFromFilesCommand_DialogCaption {
            get {
                return ResourceManager.GetString("ReplaceProjectContentsFromFilesCommand_DialogCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolving... ähnelt.
        /// </summary>
        public static string ResolutionProgress {
            get {
                return ResourceManager.GetString("ResolutionProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restore ähnelt.
        /// </summary>
        public static string Restore {
            get {
                return ResourceManager.GetString("Restore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Result ähnelt.
        /// </summary>
        public static string Result {
            get {
                return ResourceManager.GetString("Result", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck ähnelt.
        /// </summary>
        public static string Rubberduck {
            get {
                return ResourceManager.GetString("Rubberduck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Version {0} ähnelt.
        /// </summary>
        public static string Rubberduck_AboutBuild {
            get {
                return ResourceManager.GetString("Rubberduck_AboutBuild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parse all opened projects ähnelt.
        /// </summary>
        public static string RubberduckCommandbarRefreshButtonTooltip {
            get {
                return ResourceManager.GetString("RubberduckCommandbarRefreshButtonTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck encountered an error. Please save your work and restart the host program; if logging is enabled, you can upload your log file located at &apos;%AppData%Roaming\Rubberduck\Logs\RubberduckLog.txt&apos; to a GitHub issue at &apos;https://github.com/rubberduck-vba/Rubberduck/issues/new&apos; and report the bug. ähnelt.
        /// </summary>
        public static string RubberduckFatalError {
            get {
                return ResourceManager.GetString("RubberduckFatalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck Add-In could not be loaded ähnelt.
        /// </summary>
        public static string RubberduckLoadFailure {
            get {
                return ResourceManager.GetString("RubberduckLoadFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Toolwindows were not correctly destroyed and/or could not be recreated; the VBE may not be in a stable state. Rubberduck will load normally next time the VBE is initialized. ähnelt.
        /// </summary>
        public static string RubberduckReloadFailure_Message {
            get {
                return ResourceManager.GetString("RubberduckReloadFailure_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck will not reload ähnelt.
        /// </summary>
        public static string RubberduckReloadFailure_Title {
            get {
                return ResourceManager.GetString("RubberduckReloadFailure_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Run ähnelt.
        /// </summary>
        public static string Run {
            get {
                return ResourceManager.GetString("Run", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save &amp; Close ähnelt.
        /// </summary>
        public static string SaveAndClose {
            get {
                return ResourceManager.GetString("SaveAndClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All implementations: &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string SearchResults_AllImplementationsTabFormat {
            get {
                return ResourceManager.GetString("SearchResults_AllImplementationsTabFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All references: &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string SearchResults_AllReferencesTabFormat {
            get {
                return ResourceManager.GetString("SearchResults_AllReferencesTabFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search Results ähnelt.
        /// </summary>
        public static string SearchResults_Caption {
            get {
                return ResourceManager.GetString("SearchResults_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Context ähnelt.
        /// </summary>
        public static string SearchResults_Context {
            get {
                return ResourceManager.GetString("SearchResults_Context", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Location ähnelt.
        /// </summary>
        public static string SearchResults_Location {
            get {
                return ResourceManager.GetString("SearchResults_Location", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Member ähnelt.
        /// </summary>
        public static string SearchResults_MemberName {
            get {
                return ResourceManager.GetString("SearchResults_MemberName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Type ähnelt.
        /// </summary>
        public static string SearchResults_MemberType {
            get {
                return ResourceManager.GetString("SearchResults_MemberType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Module ähnelt.
        /// </summary>
        public static string SearchResults_ModuleName {
            get {
                return ResourceManager.GetString("SearchResults_ModuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select All ähnelt.
        /// </summary>
        public static string SelectAll_Button {
            get {
                return ResourceManager.GetString("SelectAll_Button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings ähnelt.
        /// </summary>
        public static string Settings {
            get {
                return ResourceManager.GetString("Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Severity ähnelt.
        /// </summary>
        public static string Severity {
            get {
                return ResourceManager.GetString("Severity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Severity: ähnelt.
        /// </summary>
        public static string SeverityLabelText {
            get {
                return ResourceManager.GetString("SeverityLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap skull_mad {
            get {
                object obj = ResourceManager.GetObject("skull_mad", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Smart Indenter settings were found in your registry.
        ///Would you like to import them to Rubberduck? ähnelt.
        /// </summary>
        public static string SmartIndenter_LegacySettingPrompt {
            get {
                return ResourceManager.GetString("SmartIndenter_LegacySettingPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Splash {
            get {
                object obj = ResourceManager.GetObject("Splash", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap SyncArrows {
            get {
                object obj = ResourceManager.GetObject("SyncArrows", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck Test Results - {0} ähnelt.
        /// </summary>
        public static string TestExplorer_AppendHeader {
            get {
                return ResourceManager.GetString("TestExplorer_AppendHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap tick_circle {
            get {
                object obj = ResourceManager.GetObject("tick_circle", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap tick_circle_pinned {
            get {
                object obj = ResourceManager.GetObject("tick_circle_pinned", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die BUG ähnelt.
        /// </summary>
        public static string TodoMarkerBug {
            get {
                return ResourceManager.GetString("TodoMarkerBug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NOTE ähnelt.
        /// </summary>
        public static string TodoMarkerNote {
            get {
                return ResourceManager.GetString("TodoMarkerNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TODO ähnelt.
        /// </summary>
        public static string TodoMarkerTodo {
            get {
                return ResourceManager.GetString("TodoMarkerTodo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Type ähnelt.
        /// </summary>
        public static string Type {
            get {
                return ResourceManager.GetString("Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update Components from Files ähnelt.
        /// </summary>
        public static string UpdateFromFilesCommand_DialogCaption {
            get {
                return ResourceManager.GetString("UpdateFromFilesCommand_DialogCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The component type of the existing component &apos;{0}&apos; does not agree with that indicated by the extension of file &apos;{1}&apos;.
        ///
        ///Import aborted. ähnelt.
        /// </summary>
        public static string UpdateFromFilesCommand_DifferentComponentType {
            get {
                return ResourceManager.GetString("UpdateFromFilesCommand_DifferentComponentType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die pre-release ähnelt.
        /// </summary>
        public static string VersionCheck_BuildType_PreRelease {
            get {
                return ResourceManager.GetString("VersionCheck_BuildType_PreRelease", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die release ähnelt.
        /// </summary>
        public static string VersionCheck_BuildType_Release {
            get {
                return ResourceManager.GetString("VersionCheck_BuildType_Release", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are currently running Rubberduck version {0}.
        ///Good news! Version {1} ({2}) is now available.
        ///
        ///To review the change log and manually upgrade Rubberduck, click &apos;Yes&apos;.
        ///
        ///This dialog is showing because version checks are enabled. You can turn off this feature in Rubberduck &gt; Settings. ähnelt.
        /// </summary>
        public static string VersionCheck_NewVersionAvailable {
            get {
                return ResourceManager.GetString("VersionCheck_NewVersionAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Warning ähnelt.
        /// </summary>
        public static string Warning {
            get {
                return ResourceManager.GetString("Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Window visibility at startup ähnelt.
        /// </summary>
        public static string WindowSettings_StartupVisibilityHeader {
            get {
                return ResourceManager.GetString("WindowSettings_StartupVisibilityHeader", resourceCulture);
            }
        }
    }
}
